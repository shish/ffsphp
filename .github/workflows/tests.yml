name: Unit Tests

on: [push, pull_request]

jobs:
  build:
    name: php${{ matrix.php }} / ${{ matrix.database }} / ${{ matrix.host }}
    strategy:
      fail-fast: false
      matrix:
        php: ['7.3', '7.4']
        database: ['pgsql', 'mysql', 'sqlite']
        host: ['ubuntu-18.04', 'ubuntu-20.04']

    runs-on: ${{ matrix.host }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up PHP
      uses: shivammathur/setup-php@master
      with:
        php-version: ${{ matrix.php }}
        coverage: pcov
        extensions: mbstring, pdo-sqlite, pdo-pgsql, pdo-mysql

    - name: Set up database
      run: |
        if [[ "${{ matrix.database }}" == "pgsql" ]]; then
            sudo systemctl start postgresql ;
            psql --version ;
            sudo -u postgres psql -c "SELECT set_config('log_statement', 'all', false);" -U postgres ;
            sudo -u postgres psql -c "CREATE USER root WITH PASSWORD 'root';" -U postgres ;
            sudo -u postgres psql -c "CREATE DATABASE test WITH OWNER root;" -U postgres ;
        fi
        if [[ "${{ matrix.database }}" == "mysql" ]]; then
            sudo systemctl start mysql ;
            mysql --version ;
            mysql -e "SET GLOBAL general_log = 'ON';" -uroot -proot ;
            mysql -e "CREATE DATABASE test;" -uroot -proot ;
        fi
        if [[ "${{ matrix.database }}" == "sqlite" ]]; then
            sqlite3 --version ;
        fi

    - name: Check Versions
      run: php -v && composer -V
      
    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Run test suite
      # SQLite is broken under 18.04, too old to support the named
      # constants "true" and "false" (it has 3.22, need 3.23)
      # MySQL + PHP7.3 is broken under 20.04, mysql only allows
      # sha2 auth and php only supports the old method
      if: |
        !(
          (matrix.database == 'sqlite' && matrix.host == 'ubuntu-18.04' ) ||
          (matrix.database == 'mysql' && matrix.host == 'ubuntu-20.04' && matrix.php == '7.3')
        )
      run: |
        if [[ "${{ matrix.database }}" == "pgsql" ]]; then
            export DSN="pgsql:user=root;password=root;host=127.0.0.1;dbname=test"
        fi
        if [[ "${{ matrix.database }}" == "mysql" ]]; then
            export DSN="mysql:user=root;password=root;host=127.0.0.1;dbname=test"
        fi
        if [[ "${{ matrix.database }}" == "sqlite" ]]; then
            export DSN="sqlite::memory:"
        fi
        vendor/bin/phpunit tests --coverage-text --whitelist src
